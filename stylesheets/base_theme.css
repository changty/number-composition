/*
	Define all the styles needed in the game in this file. 
	If you create multiple themes, this file should have all the "critical" styling and 
	
*/
/* Include Luckiest Guy font */
@font-face {
  font-family: "Luckiest Guy";
  src: url('../fonts/LuckiestGuy.ttf') format('truetype');
}
/* This makes life alot easier */
* {
	box-sizing: border-box;
}

/* 	Take all the space available */
html, body {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
	background: #fff;
	overflow: hidden;
}
/* The game container */
.gamearea {
	display:block;
	position: relative;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	width: 100%;
	height: 100%;
	background: #222;
	overflow: hidden;
}

/* Start button */
.normal .startbutton {
	font-family: "Luckiest Guy", Arial, Verdana, Tahoma;
	background-color: rgb(100,100,100);
	border-color: rgb(200,200,200);
	border-image: none;
	border-radius: 0.25em;
	border-style: solid;
	border-width: 5px 5px 8px;
	box-shadow: 0 5px 0 rgba(50, 50, 50, 0.3);
	color: rgb(255,255, 255);
	display: inline-block;
	font-size: 300%;
	font-weight: bold;
	padding: 0.4em 1em;
	text-align: center;
	text-shadow: 0 5px 0 rgba(0, 0, 0, 0.1);
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	cursor: pointer;
	transition: all 0.2s ease-in-out;
	-webkit-transition: all 0.2s ease-in-out;
	-moz-transition: all 0.2s ease-in-out;

}

/* Clicked start button */
.normal .startbutton:active {
	position: relative;
	margin-top: 5px;
	box-shadow: 0px 0px 0px rgba(255,255,255, 0);
}

/* 
	Outer container for options 
	This fills the bottom of the screen
*/
.optionsContainer {
	display: block;
	position: absolute; 
	bottom: 0; 
	left: 0;
	right: 0;
	width: 100%;
	min-height: 25vmin;
	max-height: 50vmin;
	background: #666;
	border-top: 3px solid #eee;
	text-align: center;
}

/* 
	Inner container for buttons. This expand as needed and makes it possible to 
	align buttons in the middle
*/
.options {
	display: inline-block;
	height: 100%;
	margin: auto;
	max-width: 100vmin;
	text-align: center;
}

.option {
	display: inline;
	width: 18vmin;
	height: 18vmin;
	float:left;

	margin-top: 2vmin;
	margin-bottom: 2vmin;
	margin-left: 1vmin;
	margin-right: 1vmin;

	background: #222;
	color: #f1f1f1;

	/* Align text to center */
	text-align: center;
	line-height: 18vmin; 

	font-size: 8vmin;
	font-family: "Luckiest Guy", Arial, Verdana, Tahoma;

	/* Prevent selecting text inside container */
	-webkit-touch-callout: none; /* iOS Safari */
	-webkit-user-select: none;   /* Chrome/Safari/Opera */
	-khtml-user-select: none;    /* Konqueror */
	-moz-user-select: none;      /* Firefox */
	-ms-user-select: none;       /* IE/Edge */
	user-select: none;           /* non-prefixed version, currently
	                                not supported by any browser */
}

/* Selected option */
.active {
	background: #f1f1f1;
	color: #222;
}

/*
	Target value container
*/
.targetValue {
	position: absolute;
	top: 10vmin;
	left: 50%;

	margin-left: -10vmin;
	width: 20vmin;
	height: 20vmin;

	/* RGB colors and opacity. 0 full opacity, 1 no opacity */
	background: rgba(200,200,200, .8);
}

/*
	Place to put the value. We need a separate container to enable timer
*/
.value {
	/* fill the parent container */
	display:block;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	width: 100%;
	height: 100%;

	z-index: 2; /* .value before .timer */

	/* for text */
	line-height: 20vmin;
	text-align:center;
	font-size: 10vmin;
	font-family: "Luckiest Guy", Arial, Verdana, Tahoma;
	color: #f1f1f1;

	/* Prevent selecting text inside container */
	-webkit-touch-callout: none; /* iOS Safari */
	-webkit-user-select: none;   /* Chrome/Safari/Opera */
	-khtml-user-select: none;    /* Konqueror */
	-moz-user-select: none;      /* Firefox */
	-ms-user-select: none;       /* IE/Edge */
	user-select: none;           /* non-prefixed version, currently
	                                not supported by any browser */
}

/*
	Background style for the timer (animated bar that get's smaller)
*/
.timer {
	position: absolute; 
	display: block;
	bottom: 0;
	left: 0; 
	right: 0;
	height: 100%;

	z-index: 1; /* Set .timer behind .value */

	background: #27ae60;

	animation-name: timer; /* scroll to the bottom to modify the keyframes */
	animation-fill-mode: forwards;
	animation-timing-function: linear;
	animation-duration: 10s; /* This is changed in JS */

}

/*
	Current value container
*/
.currentValue {
	position: absolute;
	top: 35vmin;
	left: 50%;

	margin-left: -7.5vmin;
	width: 15vmin;
	height: 15vmin;

	line-height: 15vmin;
	text-align:center;
	font-size: 8vmin;
	font-family: "Luckiest Guy", Arial, Verdana, Tahoma;
	color: #f1f1f1;

	/* RGB colors and opacity. 0 full opacity, 1 no opacity */
	background: rgba(200,200,200, .2);	

	/* Prevent selecting text inside container */
	-webkit-touch-callout: none; /* iOS Safari */
	-webkit-user-select: none;   /* Chrome/Safari/Opera */
	-khtml-user-select: none;    /* Konqueror */
	-moz-user-select: none;      /* Firefox */
	-ms-user-select: none;       /* IE/Edge */
	user-select: none;           /* non-prefixed version, currently
	                                not supported by any browser */
}

/* Show lifes */
.lifes {
	position: absolute;
	right: 2vmin;
	top: 2vmin;
	width: 15vmin;
	height: 15vmin;

	line-height: 15vmin;
	text-align:center;
	font-size: 8vmin;
	font-family: "Luckiest Guy", Arial, Verdana, Tahoma;
	color: #f1f1f1;

}


/* 
	Timer animation keyframes 
*/ 

/* Chrome, Safari, Opera */ 
@-moz-keyframes timer {
    from {
    	height: 100%;
    	background: #27ae60;
    }
    to {
    	height: 0%;
    	background: #c0392b;
    }
} 
/* Chrome, Safari, Opera */ 
@-webkit-keyframes timer {
    from {
    	height: 100%;
    	background: #27ae60;
    }
    to {
    	height: 0%;
    	background: #c0392b;
    }
} 

/* Standard syntax */ 
@keyframes timer {
    from {
    	height: 100%;
    	background: #27ae60;
    }
    to {
    	height: 0%;
    	background: #c0392b;
    }
}

/* smartphones, iPhone, portrait 480x320 phones */ 
@media (min-width:320px) { 

}

/* portrait e-readers (Nook/Kindle), smaller tablets @ 600 or @ 640 wide. */ 
@media (min-width:481px) {

}

/* portrait tablets, portrait iPad, landscape e-readers, landscape 800x480 or 854x480 phones */ 
@media (min-width:641px) {

}

/* tablet, landscape iPad, lo-res laptops ands desktops */ 
@media (min-width:961px) {

}

/* big landscape tablets, laptops, and desktops */ 
@media (min-width:1025px) {

}

/* hi-res laptops and desktops */ 
@media (min-width:1281px) {

}